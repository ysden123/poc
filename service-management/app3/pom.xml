<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.stulsoft.poc.service.management</groupId>
	<artifactId>app3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Application 1</name>
	<description>Example how to run Chime verticle with Java</description>
	<packaging>jar</packaging>

	<properties>
		<java.version>1.8</java.version>
		<slf4j.version>1.7.5</slf4j.version>
		<vertx.version>3.5.1</vertx.version>
		<vertx-lang-ceylon.version>3.4.1</vertx-lang-ceylon.version>
		<ceylon-complete.version>1.3.2</ceylon-complete.version>
		<log4j-slf4j-impl.version>2.9.0</log4j-slf4j-impl.version>
		<junit.platform.version>1.0.0</junit.platform.version>
		<main.verticle>com.stulsoft.poc.service.management.app3.App3MainVerticle</main.verticle>
	</properties>

	<!-- Vertx depends on Ceylon 1.3.0 but Chime on 1.3.2, so replace Ceylon 
		to 1.3.2 -->
	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${vertx.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.ceylon-lang</groupId>
					<artifactId>ceylon-complete</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- Ceylon lang dependency is required to have CeylonVerticleFactory 
				which is used to instantiate Ceylon verticles -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-lang-ceylon</artifactId>
			<version>${vertx-lang-ceylon.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.ceylon-lang</groupId>
					<artifactId>ceylon-complete</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<!-- Set Ceylon dependency to version 1.3.2 -->
			<groupId>org.ceylon-lang</groupId>
			<artifactId>ceylon-complete</artifactId>
			<version>${ceylon-complete.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j-slf4j-impl.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-surefire-plugin</artifactId> <version>2.19</version> 
				<dependencies> <dependency> <groupId>org.junit.platform</groupId> <artifactId>junit-platform-surefire-provider</artifactId> 
				<version>${junit.platform.version}</version> </dependency> </dependencies> 
				</plugin> -->
			<!-- <plugin> <groupId>com.spotify</groupId> <artifactId>dockerfile-maven-plugin</artifactId> 
				<version>1.4.0</version> <executions> <execution> <id>default</id> <goals> 
				<goal>build</goal> <goal>push</goal> </goals> </execution> </executions> 
				<configuration> <repository>${project.groupId}/${project.artifactId}</repository> 
				<tag>${project.version}</tag> <buildArgs> <VERTICLE_FILE_ARG>${project.artifactId}-${project.version}-fat.jar</VERTICLE_FILE_ARG> 
				</buildArgs> </configuration> </plugin> -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
<!-- 					<archive>
						<manifest>
							<mainClass>${mainClass}</mainClass>
						</manifest>
					</archive>
 -->					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>